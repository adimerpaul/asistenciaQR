// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id           Int       @id @default(autoincrement())
  name         String
  avatar       String    @default("default.png")
  fecha_nac    DateTime?
  telefono     String?
  direccion    String?
  username     String?   @unique
  role         String    @default("Estudiante")
  password     String?
  passwordText String?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  deleteAt     DateTime?

  // Relaciones con asistencia
  asistecias Asistencias[]

  // Relación de tipo autorreferencia: estudiante - docente
  docente    Users?  @relation("DocenteEstudiante", fields: [userId], references: [id])
  estudiante Users[] @relation("DocenteEstudiante")
  userId     Int?

  // Relación con cursos como estudiante
  cursos Cursos[] @relation("CursosEstudiantes")

  // Relación con cursos como docente
  cursosDocente Cursos[] @relation("CursosDocente")
}

model Asistencias {
  id        Int       @id @default(autoincrement())
  fecha     DateTime? @default(now())
  hora      String?
  estado    String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deleteAt  DateTime?
  Users     Users?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Cursos {
  id          Int       @id @default(autoincrement())
  nombre      String
  descripcion String?
  icono       String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  deleteAt    DateTime?

  // Muchos estudiantes (relación N:M con Users)
  Users Users[] @relation("CursosEstudiantes")

  // Un solo docente (relación 1:N con Users)
  docente Users? @relation("CursosDocente", fields: [userId], references: [id])
  userId  Int?
}
